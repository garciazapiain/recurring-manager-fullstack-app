[{"/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/index.js":"1","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/App.tsx":"2","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/reportWebVitals.js":"3","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/LibraryProducts/index.tsx":"4","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/LibraryProducts/ProductList.tsx":"5","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/LibraryProducts/CategoriesPage.tsx":"6","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/LibraryProducts/Home.tsx":"7","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/UserDashboard/index.tsx":"8","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/NavBar/NavBar.tsx":"9","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/LibraryProducts/Product.tsx":"10","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/LibraryProducts/NewProductForm.tsx":"11","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/LibraryProducts/AddProductToUserForm.tsx":"12","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/UserDashboard/ReccuranceView.tsx":"13","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/UserDashboard/AllProducts.tsx":"14","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/Elements/Button.tsx":"15","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/UserDashboard/Settings.tsx":"16"},{"size":635,"mtime":1670357656284,"results":"17","hashOfConfig":"18"},{"size":341,"mtime":1676612772618,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1670297033154,"results":"20","hashOfConfig":"18"},{"size":2199,"mtime":1677929310210,"results":"21","hashOfConfig":"18"},{"size":9158,"mtime":1674325803225,"results":"22","hashOfConfig":"18"},{"size":2085,"mtime":1673919840387,"results":"23","hashOfConfig":"18"},{"size":616,"mtime":1671159653521,"results":"24","hashOfConfig":"18"},{"size":7534,"mtime":1677929397930,"results":"25","hashOfConfig":"18"},{"size":1118,"mtime":1671475242208,"results":"26","hashOfConfig":"18"},{"size":229,"mtime":1670358818476,"results":"27","hashOfConfig":"18"},{"size":2581,"mtime":1674326035368,"results":"28","hashOfConfig":"18"},{"size":5393,"mtime":1673980376022,"results":"29","hashOfConfig":"18"},{"size":2239,"mtime":1674008471608,"results":"30","hashOfConfig":"18"},{"size":461,"mtime":1673923497032,"results":"31","hashOfConfig":"18"},{"size":295,"mtime":1674007136559,"results":"32","hashOfConfig":"18"},{"size":130,"mtime":1677929422491,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"ran1qb",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/index.js",[],[],[],"/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/App.tsx",["90"],[],"import React from 'react';\n// @ts-ignore\nimport LibraryProducts from './components/LibraryProducts/index.tsx';\n// @ts-ignore\nimport NavBar from './components/NavBar/NavBar.tsx';\nimport './index.css';\n\nfunction App() {\n  return (\n    <>\n      <div className=\"App\">\n        <LibraryProducts /> \n      </div>\n    </>\n  );\n}\n\nexport default App;",[],"/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/reportWebVitals.js",[],[],"/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/LibraryProducts/index.tsx",[],[],"/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/LibraryProducts/ProductList.tsx",["91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108"],[],"import React, { useState } from 'react';\n// @ts-ignore\nimport Product from './Product.tsx'\n// @ts-ignore\nimport Button from '../Elements/Button.tsx'\n// @ts-ignore\nimport NewProductForm from './NewProductForm.tsx';\n// @ts-ignore\nimport AddProductToUserForm from './AddProductToUserForm.tsx';\n// @ts-ignore\nimport { ReactComponent as AddProduct } from '../../Svgs/add-product.svg'\n// @ts-ignore\nimport { ReactComponent as AddedProduct } from '../../Svgs/check-product-added.svg'\n// @ts-ignore\nimport ProductAddedMessage from './ProductAddedMessage.tsx';\n\nfunction ProductList(props: any) {\n    const [productModal, setProductModal] = useState(false)\n    const [createProductForm, setCreateProductForm] = useState(false)\n    const [addProductToUserForm, setAddProductToUserForm] = useState(false)\n    const [dataFilter, setDataFilter] = useState([])\n    const [rows, setRows] = useState([])\n    const [dataRows, setDataRows] = useState([])\n    const [productAddedMessage, setProductAddedMessage] = useState(false)\n    let [productObjectToAddForUser, setProductObjectToAddForUser] = useState({})\n    let [productTitleToAddForUser, setProductTitleToAddForUser] = useState(\"\")\n    let productDataSelection = props.productDataSelection.toLowerCase()\n    let categoryTitle = props.productDataSelection.charAt(0).toUpperCase() + props.productDataSelection.slice(1)\n    function productAdded(idAdded) {\n        setAddProductToUserForm(true)\n        const productObject = dataRows.find(obj => obj.id === idAdded)\n        const { id, author, category, description, title, standard_size, unit, use_days, current_inventory } = productObject\n        setProductObjectToAddForUser(productObject)\n        setProductTitleToAddForUser(title)\n    }\n    const addProductSubmit = (productData: any) => {\n        // @ts-ignore\n        const productObject = dataRows.find(obj => obj.id === productObjectToAddForUser.id)\n        const { id, author, category, description, title} = productObject\n        const currentInventoryOriginal = productObject.current_inventory\n        const inventoryUpdatedDateOriginal = productObject.inventory_updated_date\n        const added = true\n        const unit = productData.unit\n        const use_days = productData.recurrance\n        const standard_size = productData.standard_size\n        const current_inventory = productData.current_inventory\n        const inventory_updated_date = new Date() \n        // const inventory_updated_date = current_inventory != currentInventoryOriginal ? new Date() : inventoryUpdatedDateOriginal\n        editProduct(id, author, category, description, title, added, unit, standard_size, use_days, current_inventory, inventory_updated_date)\n    }\n    function productRemove(idRemove) {\n        const productObject = dataRows.find(obj => obj.id === idRemove)\n        const { id, author, category, description, title, standard_size, unit, use_days, current_inventory } = productObject\n        const added = false\n        editProduct(id, author, category, description, title, added, standard_size, unit, use_days, current_inventory)\n        getProducts()\n    }\n    function createProductToggle() {\n        setCreateProductForm(!createProductForm)\n    }\n    function addProductToUserToggle() {\n        setAddProductToUserForm(!addProductToUserForm)\n    }\n    // function productAddedMessageToggle(){\n    //     setProductAddedMessage(!productAddedMessage)\n    // }\n    const createProductSubmit = (newProductData: any) => {\n        const title = newProductData.title\n        const description = newProductData.description\n        const category = findCategoryNumber(newProductData.category)\n        const unit = newProductData.unit\n        const use_days = newProductData.use_days\n        const standard_size = newProductData.standard_size\n        const current_inventory = 0;\n        addNewProduct(title, description, category, unit, standard_size, use_days, current_inventory)\n        setCreateProductForm(!createProductForm)\n        getProducts()\n    }\n\n    function findCategoryName(id) {\n        const object = props.categoriesData.find(obj => obj.id === id)\n        const value = object ? object.name : null;\n        return value\n    }\n\n    function findCategoryNumber(category) {\n        const object = props.categoriesData.find(obj => obj.name === category)\n        const value = object ? object.id : null;\n        return value\n    }\n\n    const ProductRow = ({ title, category, id, added }: { title: string, category: number, id: string, added: boolean }) => (\n        <tr className='text-center'>\n            <th>{title}</th>\n            <th>{findCategoryName(category)}</th>\n            <th className='text-center font-bold text-emerald-700'>{added ? <button onClick={() => productRemove(id)}><AddedProduct /></button> : <button onClick={() => productAdded(id)}><AddProduct /></button>}</th>\n        </tr>\n    );\n\n    async function getProducts() {\n        await fetch(`http://127.0.0.1:8000/api/products/`)\n            .then(response => response.json())\n            .then(response => {\n                setDataRows(response)\n            })\n    }\n\n    React.useEffect(() => {\n        getProducts()\n    }, [createProductForm])\n\n    React.useEffect(() => {\n        if (props.categoriesData.length > 0) {\n            productDataSelection == 'all-products' ? setDataFilter(dataRows) : setDataFilter(dataRows.filter(item => findCategoryName(item.category).toLowerCase() == productDataSelection))\n        }\n    }, [dataRows, productDataSelection])\n\n    React.useEffect(() => {\n        setRows(dataFilter.map((row) => <ProductRow {...row} />));\n    }, [dataFilter, dataRows])\n\n    function addNewProduct(title, description, category, unit, standard_size, use_days, current_inventory) {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ title: title, description: description, category: category, author: \"1\", unit:unit, standard_size:standard_size, use_days:use_days, current_inventory:current_inventory,inventory_updated_date: null})\n        };\n        fetch(`http://127.0.0.1:8000/api/products/`, requestOptions)\n            .then(response => response.json())\n    }\n\n    function editProduct(id, author, category, description, title, added, unit, standard_size, use_days, current_inventory, inventory_updated_date?) {\n        const requestOptions = {\n            method: 'PUT',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ title: title, description: description, category: category, author: author, id: id, added: added, unit: unit, standard_size: standard_size, use_days: use_days, current_inventory:current_inventory, inventory_updated_date:inventory_updated_date })\n        };\n        setAddProductToUserForm(false)\n        // setProductAddedMessage(true)\n        fetch(`http://127.0.0.1:8000/api/products/${id}/`, requestOptions)\n            .then(response => response.json())\n            .then(getProducts)\n    }\n\n    return (\n        <div>\n            <h2 className=\"m-5 text-4xl\">Products</h2>\n            <h4 className=\"m-5\">Filtered by:</h4>\n            <h2 className='m-5 text-lg'> {categoryTitle} category</h2>\n            {createProductForm &&\n                <div className='flex justify-center'>\n                    <NewProductForm\n                        createProductSubmit={createProductSubmit}\n                        createProductToggle={createProductToggle}\n                        productDataSelection={productDataSelection}\n                    />\n                </div>\n            }\n            {addProductToUserForm &&\n                <div className='flex justify-center'>\n                    <AddProductToUserForm\n                        addProductToUserToggle={addProductToUserToggle}\n                        productInformation={productObjectToAddForUser}\n                        productTitleToAddForUser={productTitleToAddForUser}\n                        addProductSubmit={addProductSubmit}\n                    />\n                </div>\n            }\n            {/* {productAddedMessage &&\n                <div className='flex justify-center'>\n                    <ProductAddedMessage       \n                    />\n                </div>\n            } */}\n            <table className='m-5 min-w-[90%]'>\n                <thead>\n                    <tr>\n                        <th>Product</th>\n                        <th>Category</th>\n                        <th>Add/remove</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows}\n                </tbody>\n            </table>\n            <div className=\"buttonFooterGeneric\">\n                <Button\n                    onClick={() => createProductToggle()}\n                    text=\"Create new product\"\n                    class=\"button-generic\"\n                />\n            </div>\n            {productModal &&\n                <div>\n                    <Product\n                        productModal={productModal}\n                    />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default ProductList;","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/LibraryProducts/CategoriesPage.tsx",["109","110"],[],"import React, { useEffect } from 'react';\nimport '../../index.css'\nimport './style.css'\nimport data from './data/categories'\nimport { Link } from \"react-router-dom\";\n// @ts-ignore\nimport Button from '../Elements/Button.tsx'\n\nfunction CategoriesPage(props: any) {\n    const CategoryCard = ({ name }: { name: string}) => (\n        <>\n            <Link to={`/${name.toLocaleLowerCase()}`}>\n                <div className='category-banner' onClick={() => props.cardClicked(name)}>\n                    <h2 className=\"p-5 text-5xl\">{name}</h2>\n                </div>\n            </Link>\n        </>\n    );\n    const [section, setSection] = React.useState([])\n    React.useEffect(() => {\n        window.addEventListener('scroll', isSticky);\n        return () => {\n            window.removeEventListener('scroll', isSticky);\n        };\n    });\n\n    useEffect(()=>{\n        if(props.categoriesData.length>0){\n            setSection((props.categoriesData.map((category) => <CategoryCard {...category} />)))\n        }\n        if(props.categoriesData.length>0){\n            setSection((props.categoriesData.map((category) => <CategoryCard {...category} />)))\n        }\n    },[props.categoriesData])\n\n    const isSticky = (e) => {\n        const footer = document.querySelector('.buttonFooterCategoriesPage')\n        const scrollTop = window.scrollY\n        scrollTop >= 20 ? footer.classList.add('ixs-sticky') : footer.classList.remove('is-sticky')\n    }\n    return (\n        <>\n            <h1 className=\"m-5 text-4xl\">Categories</h1>\n            <h2 className='m-5 text-lg'>See products by categories</h2>\n            <div className='category-section'>\n                {section}\n            </div>\n            <Link to=\"/all-products\">\n                <div className=\"buttonFooterGeneric\">\n                    <Button\n                        onClick={()=>props.cardClicked(\"all-products\")}\n                        text=\"Select All\"\n                        class=\"button-generic\"\n                    />\n                </div>\n            </Link>\n        </>\n    )\n}\n\nexport default CategoriesPage;","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/LibraryProducts/Home.tsx",[],[],"/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/UserDashboard/index.tsx",["111"],[],"/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/NavBar/NavBar.tsx",[],[],"/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/LibraryProducts/Product.tsx",[],[],"/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/LibraryProducts/NewProductForm.tsx",[],[],"/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/LibraryProducts/AddProductToUserForm.tsx",["112"],[],"import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport './style.css'\n\nfunction NewProductForm(props: any) {\n    const { register, handleSubmit, setValue } = useForm();\n    const [editToggleUnit, setEditToggleUnit] = React.useState(false)\n    const [editToggleStandardSize, setEditToggleStandardSize] = React.useState(false)\n    const [editToggleRecurrance, setEditToggleRecurrance] = React.useState(false)\n    const [editToggleCurrentInventory, setEditToggleCurrentInventory] = React.useState(false)\n    return (\n        <div className=\"newProductFormContainerBackground\">\n            <div className=\"newProductFormContainer\">\n                <div className=\"dismissButtonWrapper\">\n                    <button onClick={props.addProductToUserToggle}>X</button>\n                </div>\n                <div>\n                    <h1 className=\"m-5 text-3xl\">{props.productTitleToAddForUser}</h1>\n                    <div className=\"flex items-center\">\n                        <h2 className=\"m-5 text-md\" >Unit: </h2>\n                        {\n                            editToggleUnit ? (\n                                <input {...register(\"unit\")} className='w-10 mr-5'></input>\n                            )\n                                : <h2 {...setValue('unit', props.productInformation.unit)} className='w-10 mr-5'>{props.productInformation.unit}</h2>\n                        }\n                        {\n                            !editToggleUnit ? (\n                                <button onClick={() => setEditToggleUnit(true)} className='button-generic-small'>edit</button>\n                            )\n                                :\n                                <button onClick={() => setEditToggleUnit(false)} className='button-generic-small'>X</button>\n                        }\n                    </div>\n                    <div className=\"flex items-center\">\n                        <h2 className=\"m-5 text-md\">For Standard Size: </h2>\n                        {\n                            editToggleStandardSize ? (\n                                <input {...register(\"standard_size\")} className='w-10 mr-5'></input>\n                            )\n                                : <h2 {...setValue('standard_size', props.productInformation.standard_size)} className='w-10 mr-5'>{props.productInformation.standard_size}</h2>\n                        }\n                        {\n                            !editToggleStandardSize ? (\n                                <button onClick={() => setEditToggleStandardSize(true)} className='button-generic-small'>edit</button>\n                            )\n                                :\n                                <button onClick={() => setEditToggleStandardSize(false)} className='button-generic-small'>X</button>\n                        }\n                    </div>\n                    <div className=\"flex items-center\">\n                        <h2 className=\"m-5 text-md\">Recurrance:</h2>\n                        {\n                            editToggleRecurrance ? (\n                                <input {...register(\"recurrance\")} className='w-10 mr-5'></input>\n                            )\n                                : <h2 {...setValue('recurrance', props.productInformation.use_days)} className='w-10 mr-5'>{props.productInformation.use_days}</h2>\n                        }\n                        {\n                            !editToggleRecurrance ? (\n                                <button onClick={() => setEditToggleRecurrance(true)} className='button-generic-small'>edit</button>\n                            )\n                                :\n                                <button onClick={() => setEditToggleRecurrance(false)} className='button-generic-small'>X</button>\n                        }\n                        <h2 className=\"m-5 text-md\">days</h2>\n                    </div>\n                    <div className=\"flex items-center\">\n                        <h2 className=\"m-5 text-md\">Current inventory:</h2>\n                        {\n                            editToggleCurrentInventory? (\n                                <input {...register(\"current_inventory\")} className='w-10 mr-5'></input>\n                            )\n                                : <h2 {...setValue('current_inventory', props.productInformation.current_inventory)} className='w-10 mr-5'>{props.productInformation.current_inventory}</h2>\n                        }\n                        {\n                            !editToggleCurrentInventory ? (\n                                <button onClick={() => setEditToggleCurrentInventory(true)} className='button-generic-small'>edit</button>\n                            )\n                                :\n                                <button onClick={() => setEditToggleCurrentInventory(false)} className='button-generic-small'>X</button>\n                        }\n                        <h2 className=\"m-5 text-md\"></h2>\n                    </div>\n                    <form onSubmit={handleSubmit(props.addProductSubmit)}>\n                        <div className=\"flex justify-center\">\n                            <button type=\"submit\" className='button-generic'>Add</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NewProductForm","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/UserDashboard/ReccuranceView.tsx",["113"],[],"\nimport React, { useState, useEffect } from 'react';\n// @ts-ignore\nimport Button from '../Elements/Button.tsx'\n\nconst RecurranceView = (props) => {\n    const [toggleDaysUntilNextBuyEditMode, setToggleDaysUntilNextBuyEditMode] = useState(true)\n    const [inputValue, setInputValue] = useState(0)\n\n    function manageToggleDaysUntilNextBuy(){\n        if(!toggleDaysUntilNextBuyEditMode){\n            saveButtonClicked()\n        }\n        setToggleDaysUntilNextBuyEditMode(!toggleDaysUntilNextBuyEditMode)\n    }\n    function handleChange(e){\n        setInputValue(e.target.value)\n    }\n    function saveButtonClicked(){\n        if(inputValue===0){\n            return null\n        }\n        props.daysUntilNextBuyModified(inputValue)\n    }\n    return (\n        <div>\n            {/* <div className=\"m-5 flex 100vw text-sm\">\n                <p>Next buying list on: </p>\n                <p>30/01/2023</p>\n            </div> */}\n            <div className=\"m-5 flex-column 100vw\">\n                <h2>Today's buying list</h2>\n                <div className=\"flex\">\n                    {\n                        toggleDaysUntilNextBuyEditMode?\n                        <h2 className=\"mr-2\"><strong>{props.daysUntilNextBuy}</strong> days until next buy</h2>:\n                        <>\n                        <input onChange={handleChange} className='w-10 border-1 border-solid border-black'></input><h2>days until next buy</h2>\n                        </>\n                    }\n                    {\n                        toggleDaysUntilNextBuyEditMode? <Button onClick={manageToggleDaysUntilNextBuy} text=\"edit\" class=\"button-generic-small\"/> : <Button text=\"save\" class=\"button-generic-small\"  onClick={manageToggleDaysUntilNextBuy}/>\n                    }\n                </div>\n            </div>\n            <table className='m-5 min-w-[90%]'>\n                <thead>\n                    <tr>\n                        <th>Product</th>\n                        <th>Current inventory</th>\n                        <th>Remaining days</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {props.rows}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default RecurranceView","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/UserDashboard/AllProducts.tsx",["114","115"],[],"\nimport React, { useState, useEffect } from 'react';\n\nconst AllProducts = (props) => {\n    return (\n        <table className='m-5 min-w-[90%]'>\n            <thead>\n                <tr>\n                    <th>Product</th>\n                    <th>Category</th>\n                    <th>Delete</th>\n                </tr>\n            </thead>\n            <tbody>\n                {props.rows}\n            </tbody>\n        </table>\n    )\n}\n\nexport default AllProducts","/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/Elements/Button.tsx",[],[],"/Users/juangarciazapiain/Desktop/dev/other/recurring-manager-fullstack-app/frontend/src/components/UserDashboard/Settings.tsx",[],[],{"ruleId":"116","severity":1,"message":"117","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":14},{"ruleId":"116","severity":1,"message":"120","line":15,"column":8,"nodeType":"118","messageId":"119","endLine":15,"endColumn":27},{"ruleId":"116","severity":1,"message":"121","line":18,"column":26,"nodeType":"118","messageId":"119","endLine":18,"endColumn":41},{"ruleId":"116","severity":1,"message":"122","line":24,"column":12,"nodeType":"118","messageId":"119","endLine":24,"endColumn":31},{"ruleId":"116","severity":1,"message":"123","line":24,"column":33,"nodeType":"118","messageId":"119","endLine":24,"endColumn":55},{"ruleId":"116","severity":1,"message":"124","line":32,"column":17,"nodeType":"118","messageId":"119","endLine":32,"endColumn":19},{"ruleId":"116","severity":1,"message":"125","line":32,"column":21,"nodeType":"118","messageId":"119","endLine":32,"endColumn":27},{"ruleId":"116","severity":1,"message":"126","line":32,"column":29,"nodeType":"118","messageId":"119","endLine":32,"endColumn":37},{"ruleId":"116","severity":1,"message":"127","line":32,"column":39,"nodeType":"118","messageId":"119","endLine":32,"endColumn":50},{"ruleId":"116","severity":1,"message":"128","line":32,"column":59,"nodeType":"118","messageId":"119","endLine":32,"endColumn":72},{"ruleId":"116","severity":1,"message":"129","line":32,"column":74,"nodeType":"118","messageId":"119","endLine":32,"endColumn":78},{"ruleId":"116","severity":1,"message":"130","line":32,"column":80,"nodeType":"118","messageId":"119","endLine":32,"endColumn":88},{"ruleId":"116","severity":1,"message":"131","line":32,"column":90,"nodeType":"118","messageId":"119","endLine":32,"endColumn":107},{"ruleId":"116","severity":1,"message":"132","line":40,"column":15,"nodeType":"118","messageId":"119","endLine":40,"endColumn":39},{"ruleId":"116","severity":1,"message":"133","line":41,"column":15,"nodeType":"118","messageId":"119","endLine":41,"endColumn":43},{"ruleId":"134","severity":1,"message":"135","line":114,"column":34,"nodeType":"136","messageId":"137","endLine":114,"endColumn":36},{"ruleId":"134","severity":1,"message":"135","line":114,"column":164,"nodeType":"136","messageId":"137","endLine":114,"endColumn":166},{"ruleId":"138","severity":1,"message":"139","line":116,"column":8,"nodeType":"140","endLine":116,"endColumn":40,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"142","line":120,"column":8,"nodeType":"140","endLine":120,"endColumn":30,"suggestions":"143"},{"ruleId":"116","severity":1,"message":"144","line":4,"column":8,"nodeType":"118","messageId":"119","endLine":4,"endColumn":12},{"ruleId":"138","severity":1,"message":"145","line":34,"column":7,"nodeType":"140","endLine":34,"endColumn":29,"suggestions":"146"},{"ruleId":"138","severity":1,"message":"147","line":43,"column":8,"nodeType":"140","endLine":43,"endColumn":44,"suggestions":"148"},{"ruleId":"149","severity":1,"message":"150","line":83,"column":25,"nodeType":"151","endLine":83,"endColumn":53},{"ruleId":"116","severity":1,"message":"152","line":2,"column":27,"nodeType":"118","messageId":"119","endLine":2,"endColumn":36},{"ruleId":"116","severity":1,"message":"153","line":2,"column":17,"nodeType":"118","messageId":"119","endLine":2,"endColumn":25},{"ruleId":"116","severity":1,"message":"152","line":2,"column":27,"nodeType":"118","messageId":"119","endLine":2,"endColumn":36},"@typescript-eslint/no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'ProductAddedMessage' is defined but never used.","'setProductModal' is assigned a value but never used.","'productAddedMessage' is assigned a value but never used.","'setProductAddedMessage' is assigned a value but never used.","'id' is assigned a value but never used.","'author' is assigned a value but never used.","'category' is assigned a value but never used.","'description' is assigned a value but never used.","'standard_size' is assigned a value but never used.","'unit' is assigned a value but never used.","'use_days' is assigned a value but never used.","'current_inventory' is assigned a value but never used.","'currentInventoryOriginal' is assigned a value but never used.","'inventoryUpdatedDateOriginal' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'findCategoryName' and 'props.categoriesData.length'. Either include them or remove the dependency array.","ArrayExpression",["154"],"React Hook React.useEffect has a missing dependency: 'ProductRow'. Either include it or remove the dependency array.",["155"],"'data' is defined but never used.","React Hook useEffect has a missing dependency: 'CategoryCard'. Either include it or remove the dependency array.",["156"],"React Hook useEffect has missing dependencies: 'AllProductRow' and 'RecurranceRow'. Either include them or remove the dependency array.",["157"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [dataRows, findCategoryName, productDataSelection, props.categoriesData.length]",{"range":"166","text":"167"},"Update the dependencies array to be: [ProductRow, dataFilter, dataRows]",{"range":"168","text":"169"},"Update the dependencies array to be: [CategoryCard, props.categoriesData]",{"range":"170","text":"171"},"Update the dependencies array to be: [userProductsList, daysUntilNextBuy, AllProductRow, RecurranceRow]",{"range":"172","text":"173"},[5455,5487],"[dataRows, findCategoryName, productDataSelection, props.categoriesData.length]",[5592,5614],"[ProductRow, dataFilter, dataRows]",[1163,1185],"[CategoryCard, props.categoriesData]",[1776,1812],"[userProductsList, daysUntilNextBuy, AllProductRow, RecurranceRow]"]